server {

	# Listen on port 80 for IPv4 and IPv6
	# and set as the default server.
	# This will be used if no other server block matches.

	# listen 80; # for IPv4

	# server_name is used to specify the domain names
	server_name example.com www.example.com;

	# The root directive sets the root directory for requests.
	root /var/www/example.com;
	
	# The index directive specifies the default file to serve.
	# This is usually index.html or index.php.
	index index.html;

	# client_max_body_size directive is used to limit the size of client requests.
	# This is useful for preventing large file uploads.
	# The default value is 1MB, but you can increase it as needed.
	client_max_body_size 100;

	# the list of allowed HTTP methods
	# This is useful for security purposes.
	# The default is GET, HEAD, and POST.
	# Enable or disable directory listing.
	# This is useful for security purposes.
	# If enabled, users can see a list of files in the directory.
	# If disabled, they will receive a 403 Forbidden error.
	# by default we serve the index.html file.
	location / {
		allowed_methods DELETE;
		root /var/www/example.com;
		autoindex on;
		index index.html;
	}

	# The location directive is used to match specific URIs.
	# in this case, we are defining a location block for the root URI (/).
	# It will redirect all requests to a random subdomain.
	# This is useful for load balancing or for serving different content based on the subdomain.
	# The return directive is used to send a 301 redirect to the client.
	location /old-path {
		return 301 http://new.example.com$request_uri;
	}



	# set a default error page
	# need to specify the error page file that will be served if an error occurs.
	# This is useful for providing a custom error page to users.
	# The error_page directive is used to specify the error page.
	error_page 404 /404.html;
	error_page 500 /500.html;

	# set a default file to serve when the request is for a directory.

	location /plum {
		root /var/www/example.com;
		index index.html;
	}

}