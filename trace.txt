2.624 src/core/Response/Response.cpp: In member function 'void Response::matchServer()':
2.624 src/core/Response/Response.cpp:73:59: error: cannot convert 'const vServer' to 'vServer*' in assignment
2.624    73 |     _serverConfig = _serverManager->findServerConfigByName(subServConfigs, hostHeaderValue);
2.624       |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2.624       |                                                           |
2.624       |                                                           const vServer
2.624 src/core/Response/Response.cpp: In member function 'void Response::matchLocation()':
2.624 src/core/Response/Response.cpp:81:94: error: request for member 'getServerLocations' in '((Response*)this)->Response::_serverConfig', which is of pointer type 'vServer*' (maybe you meant to use '->' ?)
2.624    81 |     const Location* defaultLocation = _serverManager->findDefaultLocationBlock(_serverConfig.getServerLocations());
2.624       |                                                                                              ^~~~~~~~~~~~~~~~~~
2.631 src/core/Response/Response.cpp:88:5: error: '_location' was not declared in this scope; did you mean 'Location'?
2.631    88 |     _location = _serverManager->findLocationBlockByUri(_serverConfig, _request->getUri());
2.631       |     ^~~~~~~~~
2.631       |     Location
2.631 src/core/Response/Response.cpp:88:56: error: cannot convert 'vServer*' to 'const vServer&'
2.631    88 |     _location = _serverManager->findLocationBlockByUri(_serverConfig, _request->getUri());
2.631       |                                                        ^~~~~~~~~~~~~
2.631       |                                                        |
2.631       |                                                        vServer*
2.631 In file included from src/core/Response/../Client.hpp:7,
2.631                  from src/core/Response/Response.hpp:16,
2.631                  from src/core/Response/Response.cpp:13:
2.631 src/core/Response/../ServerManager.hpp:79:127: note:   initializing argument 1 of 'const Location ServerManager::findLocationBlockByUri(const vServer&, const string&)'
2.631    79 |                 const   Location                                                        findLocationBlockByUri(const vServer& serverConfig, const std::string& url);
2.631       |                                                                                                                ~~~~~~~~~~~~~~~^~~~~~~~~~~~
2.632 src/core/Response/Response.cpp: In member function 'bool Response::isCgiRequest() const':
2.632 src/core/Response/Response.cpp:131:50: error: 'class Location' has no member named 'getCgiExtensions'
2.632   131 |         for (const auto & ext : _locationConfig->getCgiExtensions()) {
2.632       |                                                  ^~~~~~~~~~~~~~~~
2.632 src/core/Response/Response.cpp: In member function 'void Response::handleGetRequest()':
2.632 src/core/Response/Response.cpp:146:45: error: 'class Location' has no member named 'getRoot'
2.632   146 |     std::string fullPath = _locationConfig->getRoot() + resolveRelativePath(path, _locationConfig->getPath());
2.632       |                                             ^~~~~~~
2.632 src/core/Response/Response.cpp:146:100: error: 'class Location' has no member named 'getPath'
2.632   146 |     std::string fullPath = _locationConfig->getRoot() + resolveRelativePath(path, _locationConfig->getPath());
2.632       |                                                                                                    ^~~~~~~
2.639 src/core/Response/Response.cpp:146:57: error: 'resolveRelativePath' was not declared in this scope
2.639   146 |     std::string fullPath = _locationConfig->getRoot() + resolveRelativePath(path, _locationConfig->getPath());
2.639       |                                                         ^~~~~~~~~~~~~~~~~~~
2.640 src/core/Response/Response.cpp: In member function 'bool Response::isMethodAllowed(const string&) const':
2.640 src/core/Response/Response.cpp:182:71: error: 'class Location' has no member named 'getAllowedMethods'; did you mean 'std::vector<std::__cxx11::basic_string<char> > Location::_locationAllowedMethods'? (not accessible from this context)
2.640   182 |     std::unordered_set<std::string> allowedMethods = _locationConfig->getAllowedMethods();
2.640       |                                                                       ^~~~~~~~~~~~~~~~~
2.640 In file included from src/core/Response/../parsingConfFile/vServer.hpp:13,
2.640                  from src/core/Response/../parsingConfFile/ParseConfig.hpp:9,
2.640                  from src/core/Response/../ServerManager.hpp:11,
2.640                  from src/core/Response/../Client.hpp:7,
2.640                  from src/core/Response/Response.hpp:16,
2.640                  from src/core/Response/Response.cpp:13:
2.640 src/core/Response/../parsingConfFile/LocationConfig.hpp:14:73: note: declared private here
2.640    14 |                 std::vector<std::string>                                _locationAllowedMethods;
2.640       |                                                                         ^~~~~~~~~~~~~~~~~~~~~~~
2.641 src/core/Response/Response.cpp: In member function 'bool Response::fileExists(const string&)':
2.641 src/core/Response/Response.cpp:191:37: error: no matching function for call to 'stat::stat(const char*, stat*)'
2.641   191 |     if (stat(path.c_str(), &fileStat) == -1) {
2.641       |                                     ^
2.641 In file included from /usr/include/aarch64-linux-gnu/bits/stat.h:25,
2.641                  from /usr/include/fcntl.h:78,
2.641                  from src/core/Response/../Server.hpp:18,
2.641                  from src/core/Response/../ServerManager.hpp:12,
2.641                  from src/core/Response/../Client.hpp:7,
2.641                  from src/core/Response/Response.hpp:16,
2.641                  from src/core/Response/Response.cpp:13:
2.641 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note: candidate: 'stat::stat()'
2.641    44 | struct stat
2.641       |        ^~~~
2.641 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note:   candidate expects 0 arguments, 2 provided
2.641 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note: candidate: 'constexpr stat::stat(const stat&)'
2.641 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note:   candidate expects 1 argument, 2 provided
2.641 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note: candidate: 'constexpr stat::stat(stat&&)'
2.641 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note:   candidate expects 1 argument, 2 provided
2.647 src/core/Response/Response.cpp:194:12: error: 'S_ISREG' was not declared in this scope; did you mean 'S_IFREG'?
2.647   194 |     return S_ISREG(fileStat.st_mode); // Check if it's a regular file
2.647       |            ^~~~~~~
2.647       |            S_IFREG
2.647 src/core/Response/Response.cpp: In member function 'bool Response::isLargeFile(const string&)':
2.647 src/core/Response/Response.cpp:200:37: error: no matching function for call to 'stat::stat(const char*, stat*)'
2.647   200 |     if (stat(path.c_str(), &fileStat) == -1) {
2.647       |                                     ^
2.647 In file included from /usr/include/aarch64-linux-gnu/bits/stat.h:25,
2.647                  from /usr/include/fcntl.h:78,
2.647                  from src/core/Response/../Server.hpp:18,
2.647                  from src/core/Response/../ServerManager.hpp:12,
2.647                  from src/core/Response/../Client.hpp:7,
2.647                  from src/core/Response/Response.hpp:16,
2.647                  from src/core/Response/Response.cpp:13:
2.647 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note: candidate: 'stat::stat()'
2.647    44 | struct stat
2.647       |        ^~~~
2.647 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note:   candidate expects 0 arguments, 2 provided
2.647 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note: candidate: 'constexpr stat::stat(const stat&)'
2.647 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note:   candidate expects 1 argument, 2 provided
2.647 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note: candidate: 'constexpr stat::stat(stat&&)'
2.647 /usr/include/aarch64-linux-gnu/bits/struct_stat.h:44:8: note:   candidate expects 1 argument, 2 provided
2.653 src/core/Response/Response.cpp:205:31: error: 'LARGE_FILE_SIZE_THRESHOLD' was not declared in this scope
2.653   205 |     return fileStat.st_size > LARGE_FILE_SIZE_THRESHOLD;
2.653       |                               ^~~~~~~~~~~~~~~~~~~~~~~~~
2.658 src/core/Response/Response.cpp: In member function 'void Response::makeRegularResponse(const string&)':
2.658 src/core/Response/Response.cpp:220:31: error: 'getMimeType' was not declared in this scope
2.658   220 |     addHeader("Content-Type", getMimeType(path)); // Set content type to binary
2.658       |                               ^~~~~~~~~~~
2.658 src/core/Response/Response.cpp: At global scope:
2.658 src/core/Response/Response.cpp:223:13: error: no declaration matches 'std::string Response::getMimeType(const string&) const'
2.658   223 | std::string Response::getMimeType(const std::string &path) const {
2.658       |             ^~~~~~~~
2.658 src/core/Response/Response.cpp:223:13: note: no functions named 'std::string Response::getMimeType(const string&) const'
2.658 In file included from src/core/Response/Response.cpp:13:
2.658 src/core/Response/Response.hpp:27:7: note: 'class Response' defined here
2.658    27 | class Response {
2.658       |       ^~~~~~~~
2.664 src/core/Response/Response.cpp: In member function 'void Response::makeChunkedResponse(const string&)':
2.664 src/core/Response/Response.cpp:248:17: error: 'RESPONSE_READ_BUFFER_SIZE' was not declared in this scope
2.664   248 |     char buffer[RESPONSE_READ_BUFFER_SIZE];
2.664       |                 ^~~~~~~~~~~~~~~~~~~~~~~~~
2.669 src/core/Response/Response.cpp:250:36: error: 'buffer' was not declared in this scope; did you mean 'setbuffer'?
2.669   250 |     ssize_t bytesRead = read(file, buffer, RESPONSE_READ_BUFFER_SIZE);
2.669       |                                    ^~~~~~
2.669       |                                    setbuffer
2.674 src/core/Response/Response.cpp:259:9: error: '_response' was not declared in this scope; did you mean 'Response'?
2.674   259 |         _response += "0\r\n\r\n"; // End of chunked response
2.674       |         ^~~~~~~~~
2.674       |         Response
2.679 src/core/Response/Response.cpp:264:9: error: '_response' was not declared in this scope; did you mean 'Response'?
2.679   264 |         _response += chunkSize; // Add chunk size to the response
2.679       |         ^~~~~~~~~
2.679       |         Response
2.684 src/core/Response/Response.cpp:269:31: error: 'getMimeType' was not declared in this scope
2.684   269 |     addHeader("Content-Type", getMimeType(path)); // Set content type based on file extension
2.684       |                               ^~~~~~~~~~~
2.684 src/core/Response/Response.cpp: In member function 'void Response::handleRedirectRequest()':
2.684 src/core/Response/Response.cpp:282:65: error: 'class Location' has no member named 'getRedirect'
2.684   282 |         std::pair<int, std::string> redirect = _locationConfig->getRedirect();
2.684       |                                                                 ^~~~~~~~~~~
2.684 src/core/Response/Response.cpp: At global scope:
2.684 src/core/Response/Response.cpp:300:13: error: no declaration matches 'std::string Response::createUploadFile()'
2.684   300 | std::string Response::createUploadFile() {
2.684       |             ^~~~~~~~
2.684 src/core/Response/Response.cpp:300:13: note: no functions named 'std::string Response::createUploadFile()'
2.684 In file included from src/core/Response/Response.cpp:13:
2.684 src/core/Response/Response.hpp:27:7: note: 'class Response' defined here
2.684    27 | class Response {
2.684       |       ^~~~~~~~
2.684 src/core/Response/Response.cpp:328:13: error: no declaration matches 'std::string Response::generateUUID()'
2.684   328 | std::string Response::generateUUID() {
2.684       |             ^~~~~~~~
2.684 src/core/Response/Response.cpp:328:13: note: no functions named 'std::string Response::generateUUID()'
2.684 In file included from src/core/Response/Response.cpp:13:
2.684 src/core/Response/Response.hpp:27:7: note: 'class Response' defined here
2.684    27 | class Response {
2.684       |       ^~~~~~~~
2.689 src/core/Response/Response.cpp: In member function 'void Response::handlePostRequest()':
2.689 src/core/Response/Response.cpp:342:28: error: 'createUploadFile' was not declared in this scope
2.689   342 |     std::string fileName = createUploadFile();
2.689       |                            ^~~~~~~~~~~~~~~~
2.690 src/core/Response/Response.cpp: In member function 'void Response::handleDeleteRequest()':
2.690 src/core/Response/Response.cpp:367:26: error: 'class Location' has no member named 'getUploadDirectory'
2.690   367 |     if (_locationConfig->getUploadDirectory().back() != '/')
2.690       |                          ^~~~~~~~~~~~~~~~~~
2.690 src/core/Response/Response.cpp:368:37: error: 'class Location' has no member named 'getUploadDirectory'
2.690   368 |         fullPath = _locationConfig->getUploadDirectory() + "/" + path;
2.690       |                                     ^~~~~~~~~~~~~~~~~~
2.690 src/core/Response/Response.cpp:370:37: error: 'class Location' has no member named 'getUploadDirectory'
2.690   370 |         fullPath = _locationConfig->getUploadDirectory() + path;
2.690       |                                     ^~~~~~~~~~~~~~~~~~
2.690 src/core/Response/Response.cpp: In member function 'void Response::createStartLine()':
2.690 src/core/Response/Response.cpp:387:45: error: expected primary-expression before '=' token
2.690   387 |     if (_statusMessages.find(_statusCode) = = _statusMessages.end())
2.690       |                                             ^
2.694 src/core/Response/Response.cpp:391:5: error: '_response' was not declared in this scope; did you mean 'Response'?
2.694   391 |     _response += startLine;
2.694       |     ^~~~~~~~~
2.694       |     Response
2.699 src/core/Response/Response.cpp: In member function 'void Response::createHeaders()':
2.699 src/core/Response/Response.cpp:397:9: error: '_response' was not declared in this scope; did you mean 'Response'?
2.699   397 |         _response += header.first + ": " + header.second + "\r\n";
2.699       |         ^~~~~~~~~
2.699       |         Response
2.703 src/core/Response/Response.cpp:399:5: error: '_response' was not declared in this scope; did you mean 'Response'?
2.703   399 |     _response += "\r\n"; // End of headers
2.703       |     ^~~~~~~~~
2.703       |     Response
2.706 src/core/Response/Response.cpp: In member function 'std::string Response::generateDirectoryListing(const string&, const string&)':
2.706 src/core/Response/Response.cpp:408:5: error: 'DIR' was not declared in this scope
2.706   408 |     DIR* dir = opendir(fsPath.c_str());
2.706       |     ^~~
2.709 src/core/Response/Response.cpp:408:10: error: 'dir' was not declared in this scope; did you mean 'div'?
2.709   408 |     DIR* dir = opendir(fsPath.c_str());
2.709       |          ^~~
2.709       |          div
2.712 src/core/Response/Response.cpp:408:16: error: 'opendir' was not declared in this scope
2.712   408 |     DIR* dir = opendir(fsPath.c_str());
2.712       |                ^~~~~~~
2.713 src/core/Response/Response.cpp:411:37: error: could not convert '((Response*)this)->Response::generateErrorResponse()' from 'void' to 'std::string' {aka 'std::__cxx11::basic_string<char>'}
2.713   411 |         return generateErrorResponse();
2.713       |                ~~~~~~~~~~~~~~~~~~~~~^~
2.713       |                                     |
2.713       |                                     void
2.717 src/core/Response/Response.cpp:416:21: error: 'readdir' was not declared in this scope; did you mean 'rmdir'?
2.717   416 |     while ((entry = readdir(dir))) {
2.717       |                     ^~~~~~~
2.717       |                     rmdir
2.717 src/core/Response/Response.cpp:417:33: error: invalid use of incomplete type 'struct Response::generateDirectoryListing(const string&, const string&)::dirent'
2.717   417 |         std::string name = entry->d_name;
2.717       |                                 ^~
2.717 src/core/Response/Response.cpp:414:12: note: forward declaration of 'struct Response::generateDirectoryListing(const string&, const string&)::dirent'
2.717   414 |     struct dirent* entry;
2.717       |            ^~~~~~
2.723 src/core/Response/Response.cpp:423:37: error: 'urlEncode' was not declared in this scope
2.723   423 |         html << "<li><a href=\"" << urlEncode(name) << "\">" << name << "</a></li>";
2.723       |                                     ^~~~~~~~~
2.727 src/core/Response/Response.cpp:425:5: error: 'closedir' was not declared in this scope; did you mean 'close'?
2.727   425 |     closedir(dir);
2.727       |     ^~~~~~~~
2.727       |     close
2.834 make: *** [Makefile:20: obj/core/Response/Response.o] Error 1
------
Dockerfile:15
--------------------
  13 |     
  14 |     # Compile the code when building the container
  15 | >>> RUN make re
  16 |     
  17 |     # Command to run your server by default
--------------------
ERROR: failed to solve: process "/bin/sh -c make re" did not complete successfully: exit code: 2